#===========================================================================
# ~/.profile: Executed by the command interpreter for login shells
# This file is not read by bash, if ~/.bash_profile or ~/.bash_login exist
#===========================================================================

#--- Check ssh security
sudo /usr/local/bin/check_ssh_security.sh "user_login"

#--- Load docker injected variables
if [ -f /var/tmp/bosh-cli/bosh-cli.env ] ; then
  . /var/tmp/bosh-cli/bosh-cli.env
fi

#--- CA certs
export BOSH_CA_CERT="/etc/ssl/certs/ca-certificates.crt"

#--- CF cli environment
export CF_COLOR=true

#--- Modify home user (on shared disk)
export MY_BOSH_USER=`hostname | sed -e "s+\-cli.*$++"`
export HOME=/data/shared/${MY_BOSH_USER}

#--- Create user directory
if [ ! -d ${HOME} ] ; then
  mkdir -p ${HOME}
fi

#--- Copy bash user configuration
cp /home/bosh/.bashrc ${HOME}/.bashrc
cp /home/bosh/.bash_aliases ${HOME}/.bash_aliases

#--- Redefine GIT config file
export XDG_CONFIG_HOME=${HOME}

#--- Fix clone/pull errors with ubuntu 22.04
export GNUTLS_CPUID_OVERRIDE=0x1

#--- Set git credentials cache
GIT_CREDS_DIR="${HOME}/.cache/git/credential"
if [ ! -d ${GIT_CREDS_DIR} ] ; then
  mkdir -p ${GIT_CREDS_DIR}
fi
chmod 0700 ${GIT_CREDS_DIR} > /dev/null 2>&1

#--- Redefine command history file path
export HISTFILE=${HOME}/.bash_history

#--- Set vi configuration
if [ ! -d ${HOME}/.vim/plugin ] ; then
  mkdir -p ${HOME}/.vim/plugin
fi

cat > ${HOME}/.vim/plugin/yaml-path.vim <<'EOF'
if !exists('g:yamlpath_sep')
  let g:yamlpath_sep = '/'
endif

if !exists('g:yamlpath_auto')
  let g:yamlpath_auto = 1
endif

function! Yamlpath(...)
  let sep = a:0 ? a:1 : g:yamlpath_sep
  let clean = systemlist('yaml-path --sep=' . sep . ' --line ' . line('.') . ' --col ' . string(col('.')-1), join(getline(1,'$') , "\n"))[0]
  redraw!
  echom clean
endfunction

command! -nargs=? Yamlpath call Yamlpath(<args>)

if has("autocmd") && g:yamlpath_auto
  au FileType yaml :autocmd CursorMoved * call Yamlpath()
endif
EOF

#--- Set kubeclt read-only editor
export KUBE_EDITOR="/usr/local/bin/kubectl-ro-editor.sh"

#--- Set k9s config path and create k9s plugins
export K9SCONFIG=${HOME}/.k9s
if [ ! -d ${K9SCONFIG} ] ; then
  mkdir -p ${K9SCONFIG}
fi

cp /home/bosh/.k9s/plugin.yml ${K9SCONFIG}/plugin.yml

#--- Set kubectl krew repository
if [ -d /home/bosh/.krew ] ; then
  rm -fr ${HOME}/.krew > /dev/null 2>&1
  ln -s /home/bosh/.krew ${HOME}/.krew
fi

#--- Set Cloud Foundry plugins repository
if [ -L ${HOME}/.cf ] ; then
  rm ${HOME}/.cf
else
  if [ ! -d ${HOME}/.cf ] ; then
    mkdir -p ${HOME}/.cf
  fi
fi
if [ ! -L ${HOME}/.cf/plugins ] ; then
  rm -fr ${HOME}/.cf/plugins > /dev/null 2>&1
  ln -s /home/bosh/.cf/plugins ${HOME}/.cf/plugins
fi

#--- Set testkube configuration
if [ ! -f ${HOME}/.testkube/config.json ] ; then
  testkube config namespace 02-testkube > /dev/null 2>&1
fi

#--- Redefine Path to binary
export PATH=.:/data/shared/${MY_BOSH_USER}/bin:${HOME}/bosh/template/admin:${HOME}/.krew/bin:${PATH}

##--- Load user bash profile
cp /home/bosh/bash_profile ${HOME}/.bash_profile
. ${HOME}/.bash_profile
cd ${HOME}